<?xml version="1.0" encoding="utf-8"?>
<cache-config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:element="class://com.oracle.coherence.environment.extensible.namespaces.XmlElementProcessingNamespaceContentHandler"
	xmlns:event="class://com.oracle.coherence.patterns.eventdistribution.configuration.EventDistributionNamespaceContentHandler"
	xmlns:cr="class:com.oracle.coherence.environment.extensible.namespaces.InstanceNamespaceContentHandler"
	xsi:schemaLocation="http://xmlns.oracle.com/coherence/coherence-cache-config/1.0/coherence-cache-config.xsd">
	<caching-scheme-mapping>
		<cache-mapping>
			<cache-name>CacheStoreControl</cache-name>
			<scheme-name>CacheStoreControlScheme</scheme-name>
		</cache-mapping>
		<cache-mapping>
			<cache-name>customer-cache</cache-name>
			<scheme-name>replication-queue-scheme</scheme-name>
			<event:distributor>
				<event:distributor-name>{cache-name}</event:distributor-name>
				<event:distributor-external-name>{site-name}-{cluster-name}-{cache-name}
				</event:distributor-external-name>
				<event:distributor-scheme>
					<event:coherence-based-distributor-scheme />
				</event:distributor-scheme>
				<event:distribution-channels>
					<event:distribution-channel>
						<event:channel-name>Active-Publisher-2</event:channel-name>
						<event:starting-mode system-property="channel.starting.mode">enabled
						</event:starting-mode>
						<event:channel-scheme>
							<event:remote-cluster-channel-scheme>
								<event:remote-invocation-service-name>push-replication-invocation
								</event:remote-invocation-service-name>
								<event:remote-channel-scheme>
									<event:local-cache-channel-scheme>
										<event:target-cache-name>customer-cache
										</event:target-cache-name>
										<!-- <event:conflict-resolver-scheme> <cr:class classname=" com.oracle.coherence.patterns.eventdistribution.channels.cache.BruteForceConflictResolver"/> 
											</event:conflict-resolver-scheme> -->
									</event:local-cache-channel-scheme>
								</event:remote-channel-scheme>
							</event:remote-cluster-channel-scheme>
						</event:channel-scheme>
					</event:distribution-channel>
				</event:distribution-channels>
			</event:distributor>
		</cache-mapping>
		<cache-mapping>
			<cache-name>customer-cache-non-biller</cache-name>
			<scheme-name>distributed-customer-cache-non-biller</scheme-name>
		</cache-mapping>		
	</caching-scheme-mapping>
	<!-- Read Through Refresh Ahead -->
	<caching-schemes>
		<distributed-scheme>
			<scheme-name>CacheStoreControlScheme</scheme-name>
			<service-name>CacheStoreControlService</service-name>
			<backing-map-scheme>
				<local-scheme />
			</backing-map-scheme>
			<autostart>true</autostart>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>replication-queue-scheme</scheme-name>
			<service-name>ReplicationQueueService</service-name>
			<backing-map-scheme>
				<!-- Read-write-backing-map caching scheme. -->
				<read-write-backing-map-scheme>
					<internal-cache-scheme>
						<local-scheme>
							<scheme-ref>customer-eviction</scheme-ref>
						</local-scheme>
					</internal-cache-scheme>
					<!-- <internal-cache-scheme> <local-scheme> <eviction-policy>LRU</eviction-policy> 
						<high-units>1</high-units> <unit-calculator>BINARY</unit-calculator> <unit-factor>1</unit-factor> 
						</local-scheme> </internal-cache-scheme> -->
					<cachestore-scheme>
						<!-- <class-scheme> <class-name>com.oracle.coherence.patterns.pushreplication.PublishingCacheStore</class-name> 
							<init-params> <init-param> <param-type>java.lang.String</param-type> <param-value>{cache-name}</param-value> 
							</init-param> </init-params> </class-scheme> -->

						<class-scheme>
							<!-- <class-name>spring-bean:customerCacheLoader</class-name> -->
							<class-factory-name>com.comcast.cache.server.factory.CacheServerFactory</class-factory-name>
							<method-name>getBean</method-name>
							<init-params>
								<init-param>
									<param-type>java.lang.String</param-type>
									<param-value>customerCacheStore</param-value>
								</init-param>
								<init-param>
									<param-type>java.lang.String</param-type>
									<param-value>{cache-name}</param-value>
								</init-param>
							</init-params>
						</class-scheme>
						<operation-bundling>
							<bundle-config>
								<operation-name>store</operation-name>
								<preferred-size>50</preferred-size>
								<delay-millis>1</delay-millis>
								<thread-threshold>1</thread-threshold>
								<auto-adjust>false</auto-adjust>
							</bundle-config>
						</operation-bundling>
					</cachestore-scheme>
					<write-delay-seconds>{write-behind-delay 0}</write-delay-seconds>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<serializer>
				<class-name>com.tangosol.io.pof.ConfigurablePofContext</class-name>
				<init-params>
					<init-param>
						<param-type>String</param-type>
						<param-value>comcast-pof-config.xml</param-value>
					</init-param>
				</init-params>
			</serializer>
			<autostart>true</autostart>
			<thread-count>20</thread-count>
		</distributed-scheme>
		<distributed-scheme>
			<scheme-name>distributed-customer-cache-non-biller</scheme-name>
			<service-name>DistributedCustomerCacheNonBiller</service-name>
			<backing-map-scheme>
				<!-- Read-write-backing-map caching scheme. -->
				<read-write-backing-map-scheme>
					<scheme-name>customerLoaderSchemeNonBiller</scheme-name>
					<internal-cache-scheme>
						<local-scheme>
							<scheme-name>non-biller-eviction</scheme-name>
							<expiry-delay>30s</expiry-delay>
							<unit-calculator>BINARY</unit-calculator>
						</local-scheme>
					</internal-cache-scheme>
					<cachestore-scheme>
						<class-scheme>
							<!-- <class-name>spring-bean:customerCacheLoader</class-name> -->
							<class-factory-name>com.comcast.cache.server.factory.CacheServerFactory</class-factory-name>
							<method-name>getBean</method-name>
							<init-params>
								<init-param>
									<param-type>java.lang.String</param-type>
									<param-value>customerNonBillingDataCacheStore</param-value>
								</init-param>
								<init-param>
									<param-type>java.lang.String</param-type>
									<param-value>{cache-name}</param-value>
								</init-param>
							</init-params>
						</class-scheme>
					</cachestore-scheme>
					<refresh-ahead-factor>0.5</refresh-ahead-factor>
				</read-write-backing-map-scheme>
			</backing-map-scheme>
			<serializer>
				<class-name>com.tangosol.io.pof.ConfigurablePofContext</class-name>
				<init-params>
					<init-param>
						<param-type>String</param-type>
						<param-value>comcast-pof-config.xml</param-value>
					</init-param>
				</init-params>
			</serializer>
			<autostart>true</autostart>
			<thread-count>20</thread-count>
		</distributed-scheme>
		<!-- Backing map scheme definition used by all the caches that require 
			size limitation and/or expiry eviction policies. -->
		<local-scheme>
			<scheme-name>customer-eviction</scheme-name>
			<expiry-delay>0</expiry-delay>
			<unit-calculator>BINARY</unit-calculator>
		</local-scheme>
		<proxy-scheme>
			<service-name>GCExtendTcpProxyService</service-name>
			<thread-count>20</thread-count>
			<acceptor-config>
				<tcp-acceptor>
					<local-address>
						<address>localhost</address>
						<port system-property="coherence.proxy.tcp.listen">9089</port>
					</local-address>
				</tcp-acceptor>
				<serializer>
					<class-name>com.tangosol.io.pof.ConfigurablePofContext</class-name>
					<init-params>
						<init-param>
							<param-type>String</param-type>
							<param-value>comcast-pof-config.xml</param-value>
						</init-param>
					</init-params>
				</serializer>
			</acceptor-config>
			<autostart>true</autostart>
		</proxy-scheme>
		<proxy-scheme>
			<service-name>ExtendHttpProxyService</service-name>
			<thread-count>20</thread-count>
			<acceptor-config>
				<http-acceptor>
					<local-address>
						<address>localhost</address>
						<port system-property="coherence.proxy.http.listen">8080</port>
					</local-address>
				</http-acceptor>
			</acceptor-config>
			<autostart>true</autostart>
		</proxy-scheme>
		<remote-invocation-scheme>
			<service-name>push-replication-invocation</service-name>
			<initiator-config>
				<tcp-initiator>
					<remote-addresses>
						<socket-address>
							<address>10.255.156.197</address>
							<port>9089</port>
						</socket-address>
						<socket-address>
							<address>10.255.156.198</address>
							<port>9089</port>
						</socket-address>
					</remote-addresses>
					<connect-timeout>10s</connect-timeout>
				</tcp-initiator>
				<outgoing-message-handler>
					<request-timeout>30s</request-timeout>
				</outgoing-message-handler>
				<serializer>
					<class-name>com.tangosol.io.pof.ConfigurablePofContext</class-name>
					<init-params>
						<init-param>
							<param-type>String</param-type>
							<param-value>comcast-pof-config.xml</param-value>
						</init-param>
					</init-params>
				</serializer>
			</initiator-config>
		</remote-invocation-scheme>
		<invocation-scheme>
			<scheme-name>InvocationService</scheme-name>
			<service-name>InvocationService</service-name>
			<thread-count>1</thread-count>
			<autostart>true</autostart>
		</invocation-scheme>
	</caching-schemes>
</cache-config>